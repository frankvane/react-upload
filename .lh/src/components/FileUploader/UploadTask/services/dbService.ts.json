{
    "sourceFile": "src/components/FileUploader/UploadTask/services/dbService.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1748432595644,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1748432595644,
            "name": "Commit-0",
            "content": "import type { UploadFileMeta } from \"../types/file\";\r\nimport localforage from \"localforage\";\r\n\r\nconst STORE_NAME = \"upload_files\";\r\n\r\nconst store = localforage.createInstance({\r\n  name: STORE_NAME,\r\n});\r\n\r\nexport async function saveFileMeta(meta: UploadFileMeta) {\r\n  await store.setItem(meta.key, meta);\r\n}\r\n\r\nexport async function getFileMeta(key: string): Promise<UploadFileMeta | null> {\r\n  return (await store.getItem<UploadFileMeta>(key)) || null;\r\n}\r\n\r\nexport async function removeFileMeta(key: string) {\r\n  await store.removeItem(key);\r\n}\r\n\r\nexport async function clearAllFileMeta() {\r\n  await store.clear();\r\n}\r\n\r\nexport async function getAllFileMeta(): Promise<UploadFileMeta[]> {\r\n  const metas: UploadFileMeta[] = [];\r\n  await store.iterate<UploadFileMeta, void>((value) => {\r\n    metas.push(value);\r\n  });\r\n  return metas;\r\n}\r\n"
        }
    ]
}